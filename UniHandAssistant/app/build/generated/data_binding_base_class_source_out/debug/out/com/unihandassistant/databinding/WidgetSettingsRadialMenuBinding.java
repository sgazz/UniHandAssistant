// Generated by view binder compiler. Do not edit!
package com.unihandassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.unihandassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WidgetSettingsRadialMenuBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FloatingActionButton btnCombinationOpposite;

  @NonNull
  public final FloatingActionButton btnCombinationStandard;

  @NonNull
  public final FloatingActionButton btnPositionLeft;

  @NonNull
  public final FloatingActionButton btnPositionRight;

  @NonNull
  public final FloatingActionButton btnSensitivityHigh;

  @NonNull
  public final FloatingActionButton btnSensitivityLow;

  @NonNull
  public final FloatingActionButton btnSensitivityMedium;

  @NonNull
  public final FloatingActionButton btnSpeedFast;

  @NonNull
  public final FloatingActionButton btnSpeedNormal;

  @NonNull
  public final FloatingActionButton btnSpeedSlow;

  private WidgetSettingsRadialMenuBinding(@NonNull FrameLayout rootView,
      @NonNull FloatingActionButton btnCombinationOpposite,
      @NonNull FloatingActionButton btnCombinationStandard,
      @NonNull FloatingActionButton btnPositionLeft, @NonNull FloatingActionButton btnPositionRight,
      @NonNull FloatingActionButton btnSensitivityHigh,
      @NonNull FloatingActionButton btnSensitivityLow,
      @NonNull FloatingActionButton btnSensitivityMedium,
      @NonNull FloatingActionButton btnSpeedFast, @NonNull FloatingActionButton btnSpeedNormal,
      @NonNull FloatingActionButton btnSpeedSlow) {
    this.rootView = rootView;
    this.btnCombinationOpposite = btnCombinationOpposite;
    this.btnCombinationStandard = btnCombinationStandard;
    this.btnPositionLeft = btnPositionLeft;
    this.btnPositionRight = btnPositionRight;
    this.btnSensitivityHigh = btnSensitivityHigh;
    this.btnSensitivityLow = btnSensitivityLow;
    this.btnSensitivityMedium = btnSensitivityMedium;
    this.btnSpeedFast = btnSpeedFast;
    this.btnSpeedNormal = btnSpeedNormal;
    this.btnSpeedSlow = btnSpeedSlow;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WidgetSettingsRadialMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WidgetSettingsRadialMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.widget_settings_radial_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WidgetSettingsRadialMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCombinationOpposite;
      FloatingActionButton btnCombinationOpposite = ViewBindings.findChildViewById(rootView, id);
      if (btnCombinationOpposite == null) {
        break missingId;
      }

      id = R.id.btnCombinationStandard;
      FloatingActionButton btnCombinationStandard = ViewBindings.findChildViewById(rootView, id);
      if (btnCombinationStandard == null) {
        break missingId;
      }

      id = R.id.btnPositionLeft;
      FloatingActionButton btnPositionLeft = ViewBindings.findChildViewById(rootView, id);
      if (btnPositionLeft == null) {
        break missingId;
      }

      id = R.id.btnPositionRight;
      FloatingActionButton btnPositionRight = ViewBindings.findChildViewById(rootView, id);
      if (btnPositionRight == null) {
        break missingId;
      }

      id = R.id.btnSensitivityHigh;
      FloatingActionButton btnSensitivityHigh = ViewBindings.findChildViewById(rootView, id);
      if (btnSensitivityHigh == null) {
        break missingId;
      }

      id = R.id.btnSensitivityLow;
      FloatingActionButton btnSensitivityLow = ViewBindings.findChildViewById(rootView, id);
      if (btnSensitivityLow == null) {
        break missingId;
      }

      id = R.id.btnSensitivityMedium;
      FloatingActionButton btnSensitivityMedium = ViewBindings.findChildViewById(rootView, id);
      if (btnSensitivityMedium == null) {
        break missingId;
      }

      id = R.id.btnSpeedFast;
      FloatingActionButton btnSpeedFast = ViewBindings.findChildViewById(rootView, id);
      if (btnSpeedFast == null) {
        break missingId;
      }

      id = R.id.btnSpeedNormal;
      FloatingActionButton btnSpeedNormal = ViewBindings.findChildViewById(rootView, id);
      if (btnSpeedNormal == null) {
        break missingId;
      }

      id = R.id.btnSpeedSlow;
      FloatingActionButton btnSpeedSlow = ViewBindings.findChildViewById(rootView, id);
      if (btnSpeedSlow == null) {
        break missingId;
      }

      return new WidgetSettingsRadialMenuBinding((FrameLayout) rootView, btnCombinationOpposite,
          btnCombinationStandard, btnPositionLeft, btnPositionRight, btnSensitivityHigh,
          btnSensitivityLow, btnSensitivityMedium, btnSpeedFast, btnSpeedNormal, btnSpeedSlow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
